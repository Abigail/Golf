# [All you have to do is print the number 1! ... Twice][codegolf]


## Your task

In your language of choice: create a program that outputs 1

This 1 may either be a string or value equivalent to the number one.

## The shifting catch

If you take the unicode index for each character in your program,
and shift each of those indexes by the same amount, then the result
will be another program (potentially executable in different language)
that also outputs 1.

Find the unicode index of a character: here.

E.g;

If your program looked like: X?$A, and somehow output 1, and it
also miraculously outputs 1 after shifting all of it's Unicode
indices up by, say, 10; then that process of shifting looks like
this:

    original program: X?$A

    letter      index    shift   new-index   new-letter

    X            88       +10        98          b   
     ?           63                  73          I
      $          36                  46          .
       A         65                  75          K

    new program: BI.K

Note: The unicode index will often be represented in the form similar
to U+0058. 58 is the hexadecimal index. In decimal, that's 88. The
link above will list 88 under the UTF-32 (decimal) encoding section.
That is the number you want to increment or decrement!

Examples of valid outputs

    1
    "1"
    '1'
    [1]
    (1)
    1.0
    00000001
    one

Note: If your language only supports the output of true as an
equivalent to 1, that is acceptable.


[codegolf]: https://codegolf.stackexchange.com/questions/205977/all-you-have-to-do-is-print-the-number-1-twice


## Solutions

### Perl/Perl

`solution1b.pl` is `solution1a.pl` with each character shifted by -1 codepoint.
Run them with -M5.010

### Perl/Befunge-93

`solution2b.bf` is `solution2a.pl` with each character shifted by 10 codepoints.

### Perl/Befunge-93 polyglot

`solution3.pl` runs both in perl (with `-M5.010`) and Befunge-93.
