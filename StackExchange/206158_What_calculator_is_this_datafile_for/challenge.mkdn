# [What calculator is this datafile for?][codegolf]

The challenge today is very simple. The task is to determine the
TI calculator, for which the submitted datafile was made for.

The datafiles always start with a string `**TI`, the version (described
below) and other data you can ignore.

Now, the versions you need to recognize are:

    95* => TI-95
    92P => TI-92+
    92* => TI-92
    89* => TI-89
    86* => TI-86
    85* => TI-85
    84P => TI-84+
    84* => TI-84
    83* => TI-83
    83P => TI-83+
    82* => TI-82
    81* => TI-81
    74* => TI-74
    73P => TI-73+

## Examples

    **TI95*   => TI-95
    **TI83P   => TI-83+
    **TI73P   => TI-73+
    **TI85*   => TI-85
    **TI83PGG => TI-83+

## Rules

You can assume the input is always correct, is at least 7 characters
long and has been crafted for one of the TI calculators listed
above.

[codegolf]: https://codegolf.stackexchange.com/questions/206158/what-calculator-is-this-datafile-for


## Solutions

### Perl

Keep the first digit and the next two characters, removes anything
after that, and inserts a `-` before the first digit. Replaces any `P`
with a `+`. Removes any `*`.

Reads lines from `STDIN`, writes versions to `STDOUT`.

### [Befunge-93][befunge]

Read two characters (and ignore them). Read a char (`T`) and print
it. Read another char (`I`) and print it. Print a `-`. Read a char
(a digit) and print it. Read another char (a digit) and print
it<sup>&#x2020;</sup>.
Read a char, end the program if it's not a `P`, else print a `+`
and end the program.

<sup>&#x2020;</sup>We cannot just read a number and print a number,
as that will be printed with an additional trailing space.

[befunge]: https://tio.run/##S0pNK81LT/3/v66uTqdOR0lXSQdE11kpBSjpKjvEK2kr6Tj8/6@lFeJpaRrg7g4A
