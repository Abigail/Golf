#!/opt/perl/bin/perl

use 5.026;

use strict;
use warnings;
no  warnings 'syntax';

use experimental 'signatures';

use List::Util qw [max];

foreach my $ext (qw [pl]) {
    my $solution               =  "solution.$ext";
    my $solution_hflip         =  "solution-hflip.$ext";
    my $solution_vflip         =  "solution-vflip.$ext";
    my $solution_dflip         =  "solution-dflip.$ext";
    my $solution_mirror        =  "solution-mirror.$ext";
    my $solution_hflip_mirror  =  "solution-hflip-mirror.$ext";
    my $solution_vflip_mirror  =  "solution-vflip-mirror.$ext";
    my $solution_dflip_mirror  =  "solution-dflip-mirror.$ext";

    open my $fh, "<", $solution or die "open: $!";

    my @lines = <$fh>;
    chomp @lines;

    my @lines_mirror;
    foreach my $x (keys @lines) {
        my $i = 0;
        foreach my $c (split // => $lines [$x]) {
            $lines_mirror [$i ++] [$x] = $c;
        }
    }
    foreach my $line (@lines_mirror) {
        $line = join "" => map {$_ // " "} @$line;
    }

    #
    # Find the longest line, space pad the shorter ones.
    #
    my $max = max map {length} @lines;
    foreach my $line (@lines) {
        $line .= " " x ($max - length $line);
    }

    open my $fh_hflip,        ">", $solution_hflip        or die "open: $!";
    open my $fh_vflip,        ">", $solution_vflip        or die "open: $!";
    open my $fh_dflip,        ">", $solution_dflip        or die "open: $!";
    open my $fh_mirror,       ">", $solution_mirror       or die "open: $!";
    open my $fh_hflip_mirror, ">", $solution_hflip_mirror or die "open: $!";
    open my $fh_vflip_mirror, ">", $solution_vflip_mirror or die "open: $!";
    open my $fh_dflip_mirror, ">", $solution_dflip_mirror or die "open: $!";

    foreach my $line (@lines) {
        say $fh_hflip        scalar reverse $line;
    }
    foreach my $line (@lines_mirror) {
        say $fh_mirror                      $line;
        say $fh_hflip_mirror scalar reverse $line;
    }

    foreach my $line (reverse @lines) {
        say $fh_vflip                       $line;
        say $fh_dflip        scalar reverse $line;
    }

    foreach my $line (reverse @lines_mirror) {
        say $fh_vflip_mirror                $line;
        say $fh_dflip_mirror scalar reverse $line;
    }

    close $fh_hflip;
    close $fh_vflip;
    close $fh_dflip;
    close $fh_mirror;
    close $fh_hflip_mirror;
    close $fh_vflip_mirror;
    close $fh_dflip_mirror;
}


__END__
